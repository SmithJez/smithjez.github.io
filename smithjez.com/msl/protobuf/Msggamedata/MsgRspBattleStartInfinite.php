<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: MsgRspBattleStartInfinite.proto

namespace Msggamedata;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>msggamedata.MsgRspBattleStartInfinite</code>
 */
class MsgRspBattleStartInfinite extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.msggamedata.MsgBattleStartBasicInfo basic_info = 1;</code>
     */
    private $basic_info = null;
    /**
     * Generated from protobuf field <code>.msggamedata.StageDifficultyType difficulty = 2;</code>
     */
    private $difficulty = 0;

    public function __construct() {
        \GPBMetadata\MsgRspBattleStartInfinite::initOnce();
        parent::__construct();
    }

    /**
     * Generated from protobuf field <code>.msggamedata.MsgBattleStartBasicInfo basic_info = 1;</code>
     * @return \Msggamedata\MsgBattleStartBasicInfo
     */
    public function getBasicInfo()
    {
        return $this->basic_info;
    }

    /**
     * Generated from protobuf field <code>.msggamedata.MsgBattleStartBasicInfo basic_info = 1;</code>
     * @param \Msggamedata\MsgBattleStartBasicInfo $var
     * @return $this
     */
    public function setBasicInfo($var)
    {
        GPBUtil::checkMessage($var, \Msggamedata\MsgBattleStartBasicInfo::class);
        $this->basic_info = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.msggamedata.StageDifficultyType difficulty = 2;</code>
     * @return int
     */
    public function getDifficulty()
    {
        return $this->difficulty;
    }

    /**
     * Generated from protobuf field <code>.msggamedata.StageDifficultyType difficulty = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setDifficulty($var)
    {
        GPBUtil::checkEnum($var, \Msggamedata\StageDifficultyType::class);
        $this->difficulty = $var;

        return $this;
    }

}

